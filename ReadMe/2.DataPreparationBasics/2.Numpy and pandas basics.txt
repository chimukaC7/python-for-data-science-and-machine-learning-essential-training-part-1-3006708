Numpy and pandas basics
Selecting transcript lines in this section will navigate to timestamp in the video
- [Instructor] For embarking on any sort of data analysis journey in Python, you need to be very clear on NumPy and Pandas basics. The NumPy library is a third party Python library that is used ubiquitously across data science and data analysis. NumPy is a numerical library that you can use to create shape and reshape data structures. Each of these data structures are what's called an N-dimensional array or ndarray. Ndarrays are faster than and more computationally efficient than Python's built-in containers, and because of that, almost all data analytics and data science Python libraries require NumPy or are what we call built on top of NumPy. An ndarray is simply a container for data. Each ndarray has a distinct number of dimensions as well as a size and data type. Consider the two ndarrays you see on the screen here, they both contain identical data, meaning technically they are the same data set, but they're stored in completely different structures. NumPy makes it very easy to shape and reshape your data into the exact structure you need for analysis. With just one function call, you can easily use the NumPy library to arrange and rearrange your data set in order to store it in various structures. The flat container you see on the screen here is an array structure. More specifically, a one dimensional array. The table is an ndarray. It's a two dimensional array. Both are matrix structures. Technically, they're both ndarrays, but the flat array has only one dimension, so it's more clear to call it an array. The Pandas library is also a third party Python library. It's built on top of NumPy and it offers an easy way to work with arrays in matrices. Pandas is useful for its fast data cleaning preparation., its powerful analysis capabilities, Its ease of use for data visualization and machine learning, and also for its deep compatibility with NumPy arrays and matrices because of course, it's built on top of NumPy. Arrays and matrices are called series and data frames in Pandas. A series is an array similar to a one dimensional array in NumPy. A data frame is a two dimensional table that can hold different types of data. It's similar to a matrix in NumPy. Within pandas, a series object is either a single row or column, and it's always indexed. A data frame object is pretty much like a spreadsheet of rows and columns. The rows and columns individually are actually series of objects in pandas library, and data frames are always indexable. In case you're curious about all this index talk, An index is a list of integers or labels you can use to uniquely identify rows or columns. In this course, we're going to be indexing using mostly square brackets. In the following coding demonstration we're going to be using comparison operators, so I wanted to give you this table. You can review it on your own j just to re-familiarize yourself with using comparison operators in Python. The two I wanted to point out are simply the greater than symbol and the less than symbol, because we'll be using those in the following coding demonstration. Throughout this course, we're going to be consistently using the NumPy and Pandas library.


Sure, let's simplify the concepts of NumPy and pandas, focusing on their basics.

NumPy is like a super-efficient calculator for handling lots of numbers all at once. Imagine you have a huge box of colored balls, and you want to organize them quickly by color, count them, or even change their colors based on certain rules. NumPy helps you do that with numbers in your computer. It lets you create and work with large groups of numbers (arrays) very efficiently, much faster than if you had to count or organize each number one by one.

Pandas builds on NumPy and is like a super-organized spreadsheet. If NumPy helps with handling a big box of balls, pandas help you label each ball with more information (like size, weight, and color) and organize them into neat rows and columns. This way, you can quickly find all the blue balls that are heavier than 50 grams, for example. In pandas, these rows and columns are put into something called a DataFrame, which is just a fancy term for a table where your data is neatly organized.

Together, NumPy and pandas make it much easier to work with large amounts of data on your computer, letting you organize, analyze, and manipulate this data much faster than you could manually.